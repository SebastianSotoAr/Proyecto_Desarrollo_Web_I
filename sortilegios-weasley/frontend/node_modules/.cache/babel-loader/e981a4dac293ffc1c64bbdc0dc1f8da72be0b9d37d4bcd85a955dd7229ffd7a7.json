{"ast":null,"code":"var _jsxFileName = \"/home/straeker/Documentos/GitHub/Proyecto_Desarrollo_Web_I/sortilegios-weasley/frontend/src/pages/LogginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport \"../styles/login.css\";\nimport TermsModal from '../components/TermsModal';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from '../components/auth'; // ✅ importa el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [showTerms, setShowTerms] = useState(false);\n  const [acceptedTerms, setAcceptedTerms] = useState(false);\n  const {\n    setUser,\n    setIsLoggedIn\n  } = useContext(AuthContext); // ✅ toma del contexto\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    if (!acceptedTerms) {\n      setError('Debes aceptar los Términos y Condiciones.');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/users/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user); // ✅ ACTUALIZA CONTEXTO GLOBAL\n      setIsLoggedIn(true); // ✅ ACTUALIZA SESIÓN\n\n      navigate('/');\n    } catch (err) {\n      setError('Credenciales inválidas. Verifica usuario y contraseña.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"8FPP8ZwpdgVJkcWHH3JzAK5I2fo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","TermsModal","useNavigate","axios","AuthContext","jsxDEV","_jsxDEV","LoginPage","_s","navigate","username","setUsername","password","setPassword","error","setError","showTerms","setShowTerms","acceptedTerms","setAcceptedTerms","setUser","setIsLoggedIn","handleLogin","e","preventDefault","res","post","token","user","data","localStorage","setItem","JSON","stringify","err","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/straeker/Documentos/GitHub/Proyecto_Desarrollo_Web_I/sortilegios-weasley/frontend/src/pages/LogginPage.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport \"../styles/login.css\";\nimport TermsModal from '../components/TermsModal';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from '../components/auth'; // ✅ importa el contexto\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [showTerms, setShowTerms] = useState(false);\n  const [acceptedTerms, setAcceptedTerms] = useState(false);\n\n  const { setUser, setIsLoggedIn } = useContext(AuthContext); // ✅ toma del contexto\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!acceptedTerms) {\n      setError('Debes aceptar los Términos y Condiciones.');\n      return;\n    }\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/users/login', {\n        username,\n        password\n      });\n\n      const { token, user } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      setUser(user);           // ✅ ACTUALIZA CONTEXTO GLOBAL\n      setIsLoggedIn(true);     // ✅ ACTUALIZA SESIÓN\n\n      navigate('/');\n    } catch (err) {\n      setError('Credenciales inválidas. Verifica usuario y contraseña.');\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      {/* ... sin cambios aquí ... */}\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAO,qBAAqB;AAC5B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM;IAAEqB,OAAO;IAAEC;EAAc,CAAC,GAAGrB,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC;;EAE5D,MAAMkB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI,CAACG,aAAa,EAAE;MAClBH,QAAQ,CAAC,2CAA2C,CAAC;MACrD;IACF;IAEA,IAAI;MACF,MAAMU,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,uCAAuC,EAAE;QACpEhB,QAAQ;QACRE;MACF,CAAC,CAAC;MAEF,MAAM;QAAEe,KAAK;QAAEC;MAAK,CAAC,GAAGH,GAAG,CAACI,IAAI;MAChCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;MAElDR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAW;MACzBP,aAAa,CAAC,IAAI,CAAC,CAAC,CAAK;;MAEzBZ,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZnB,QAAQ,CAAC,wDAAwD,CAAC;IACpE;EACF,CAAC;EAED,oBACET,OAAA;IAAK6B,SAAS,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA3CID,SAAS;EAAA,QACIL,WAAW;AAAA;AAAAsC,EAAA,GADxBjC,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}